plugins {
    id 'java-library'
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    alias libs.plugins.modDevGradle
    alias libs.plugins.machete // automatic jar compressing on build
    alias libs.plugins.lombok
}

group = mod_group_id

// ModDevGradle requires Java21, but we need to compile with Java17 to maintain compatibility
java.toolchain.languageVersion = JavaLanguageVersion.of(17)

// Formats the mod version to include the loader, Minecraft version, build number (if present), and '-SNAPSHOT-<timestamp>' if enabled.
boolean isSnapshot = System.getenv("SNAPSHOT")
version = "${mod_version}" + (isSnapshot ? "-SNAPSHOT" : "")

apply from: "$rootDir/gradle/scripts/moddevgradle.gradle"
apply from: "$rootDir/gradle/scripts/repositories.gradle"
apply from: "$rootDir/dependencies.gradle"
apply from: "$rootDir/gradle/scripts/resources.gradle"
apply from: "$rootDir/gradle/scripts/jars.gradle"
apply from: "$rootDir/gradle/scripts/publishing.gradle"

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

tasks.withType(JavaCompile).configureEach {
    options.encoding = "UTF-8"
}

machete {
    // disable machete locally for faster builds
    enabled = false
}

lombok {
    version = "1.18.32"
}

// IDEA no longer automatically downloads sources/javadoc jars for dependencies, so we need to explicitly enable the behavior.
idea {
    module {
        downloadSources = true
        downloadJavadoc = true
    }
}

if (use_render_doc) {
    tasks.register("runWithRenderDoc", Exec) {
        def javaExecTask = tasks.withType(JavaExec).named("runClient").get()
        def javaHome = javaExecTask.javaLauncher.get().metadata.installationPath.asFile.absolutePath
        commandLine = [
                "${render_doc_path}\\renderdoccmd.exe",
                "capture",
                "--opt-hook-children",
                "--wait-for-exit",
                "--working-dir",
                ".",
                "$javaHome/bin/java.exe",
                "-Xmx64m",
                "-Xms64m",
                "-Dorg.gradle.appname=gradlew",
                "-Dorg.gradle.java.home=$javaHome",
                "-classpath",
                "gradle/wrapper/gradle-wrapper.jar",
                "org.gradle.wrapper.GradleWrapperMain",
                "runClient"
        ]
    }
}